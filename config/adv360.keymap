
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
          &none            &kp N1     &kp N2      &kp N3        &kp N4  &kp N5                     &none                                                                                                       &kp N6  &kp N7    &kp N8    &kp N9  &kp N0  &kp MINUS                     &kp EQUAL
        &kp TAB  &kp SINGLE_QUOTE  &kp COMMA  &kp PERIOD         &kp P   &kp Y              &kp LEFT_ALT                                                                                                    &kp GRAVE   &kp F     &kp G     &kp C   &kp R      &kp L                      &kp BSLH
      &kp LCTRL             &kp A      &kp O       &kp E         &kp U   &kp I            &kp LEFT_SHIFT         &lt 2 DEL      &lt 2 DELETE                  &macro_listen          &kp RIGHT_SHIFT  &kp RIGHT_SHIFT   &kp D     &kp H     &kp T   &kp N      &kp S                     &kp SLASH
 &kp LEFT_SHIFT     &kp SEMICOLON      &kp Q       &kp J         &kp K   &kp X                                                     &kp LCTRL                  &kp RIGHT_ALT                                             &kp B     &kp M     &kp W   &kp V      &kp Z  &mt RIGHT_SHIFT LEFT_BRACKET
   &kp LEFT_ALT    &kp LEFT_SHIFT  &kp LCTRL    &kp LGUI  &kp LEFT_ALT                         &kp SPACE  &mt LEFT_GUI TAB  &mt LEFT_ALT ESC                    &lt 1 ENTER  &mt RIGHT_GUI BACKSPACE        &kp SPACE          &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT             &kp RIGHT_BRACKET
            >;
        };

        layer_Layer__1 {
            bindings = <
 &trans           &trans        &trans        &trans        &trans        &trans                       &trans                                                            &trans        &trans         &trans        &trans                &trans                 &trans   &trans
 &trans           &trans        &trans        &trans        &trans        &trans              &kp C_VOLUME_UP                                                            &trans        &trans         &trans        &trans                &trans                 &trans   &trans
 &trans     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5            &kp C_VOLUME_DOWN  &kp C_PLAY_PAUSE  &trans                  &trans  &trans   &none  &kp NUMBER_6   &kp NUMBER_7  &kp NUMBER_8          &kp NUMBER_9           &kp NUMBER_0   &trans
 &trans  &kp EXCLAMATION        &kp AT      &kp HASH    &kp DOLLAR   &kp PERCENT                                                 &trans                  &trans                     &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS   &trans
 &kp F1           &kp F2        &kp F3        &kp F4        &kp F5                                     &trans            &trans  &trans                  &trans  &trans  &trans                       &kp F6        &kp F7                &kp F8                 &kp F9  &kp F10
            >;
        };

        layer_Layer__2 {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                                          &trans        &trans           &trans           &trans         &trans            &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                                          &trans        &trans     &macro_mag_u     &macro_mag_i         &trans            &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                             &none                &trans  &trans        &trans     &macro_mag_j     &macro_mag_k         &trans            &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                            &trans                                &macro_mag_d     &macro_mag_e     &macro_mag_f   &macro_mag_t      &macro_mag_g  &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &macro_mag_enter  &macro_mag_backspace  &trans                &macro_mag_left  &macro_mag_down  &macro_mag_up  &macro_mag_right  &trans
            >;
        };

    };
};
